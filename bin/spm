#!/usr/bin/env node

var path = require('path')
var fs = require('fs')
var child_process = require('child_process')


var commander = require('commander')
var program = require('../lib/terminal/program')
require('../lib/terminal/color').colorful()
var plugin = require('../lib/core/plugin')
var spawn = require('../lib/utils').spawn

// register builtin command
var files = fs.readdirSync(path.join(__dirname, '..', 'lib', 'core'))
files.toString().split(',').forEach(function(f) {
  var name = f.replace('.js', '')
  var module = require('../lib/core/' + name)
  program.registerBuiltin(name, module.description)
})

// register extentions
plugin.trigger('registerCommand')


commander.helpInformation = function() {
 return [
   '',
   '  ' + 'â™¨'.to.cyan.color + '  ' + 'Static Package Manager'.to.bold.color,
   '',
   '  Usage: ' + this._name + ' ' + this.usage(),
   '' + this.commandHelp(),
   '  Options:',
   '',
   '' + this.optionHelp().replace(/^/gm, '    '),
   '',
   ''
  ].join('\n');
}

commander
  .version(require('../package').version)
  .usage('<command> [options]')


// sub command help
commander.on('--help', function() {
  if (program.builtins.length) {
    console.log('  ' + 'Commands:'.to.bold.green.color)
    console.log()
    program.builtins.forEach(function(cmd) {
      program.printHelp(cmd)
    })
  }

  if (program.extensions.length) {
    console.log()
    console.log('  ' + 'Extensions:'.to.bold.blue.color)
    console.log()
    program.extensions.forEach(function(cmd) {
      program.printHelp(cmd)
    })
  }
  console.log()
});

commander.parse(process.argv)

var args = process.argv.slice(3)
var subcmd = commander.args[0]

if (!subcmd) {
  process.stdout.write(commander.helpInformation());
  commander.emit('--help')
  process.exit()
}

if (subcmd == 'help') {
  var helpcmd = commander.args[1]
  if (!helpcmd) {
    process.stdout.write(commander.helpInformation());
    commander.emit('--help')
    process.exit()
  }

  var bin = executable(helpcmd) 
  bin && child_process.exec(bin + ' --help', function(err, stdout) {
    if (err) {
      throw err;
    }
    process.stdout.write(stdout)
  })
} else {
  var bin = executable(subcmd)
  bin && spawn(bin, args, {stdio: 'inherit', customFds: [0, 1, 2]})
}


// helpers
// ----------
function executable(subcmd) {
  // find executable
  var bin = 'spm-' + subcmd

  var local = path.join(__dirname, bin)
  if (fs.existsSync(local)) {
    return local
  }

  var extensions = program.extensions
  for (var i = 0; i < extensions.length; i++) {
    var cmd = extensions[i]
    if (subcmd === cmd.name) return cmd.executable
  }
  console.log()
  console.log(("  Can't find command: " +  subcmd).to.red.color)
  console.log()
  return null
}
