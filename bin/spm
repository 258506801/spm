#!/usr/bin/env node

var path = require('path')
var fs = require('fs')
var os = require('os').type()
var child_process = require('child_process')

function spawn(command, args, options) {
  if (os === 'Windows_NT') {
    spawn = function(command, args, options) {
      args = ['/c', command].concat(args)
      command = 'cmd'
    }
  }
  return child_process.spawn(command, args, options)
}

var commander = require('commander')
var program = require('../lib/terminal/program')
var color = require('../lib/terminal/color')

// register builtin command
program.registerBuiltin('install', 'install a cmd module')
program.registerBuiltin('build', 'build a cmd module')
program.registerBuiltin('help', 'show help information')

// for test
program.registerExtension('init', 'initialize template')

/*
plugins.forEach(function(plugin) {
  plugin.registerCommand()
})
*/



var builtins = program.listBuiltin()
var extensions = program.listExtensions()

commander
  .version(require('../package').version)
  .usage('<command> [options]')


// sub command help
commander.on('--help', function() {
  if (builtins.length) {
    console.log('  ' + color.bold(color.green('Commands:')))
    console.log()
    builtins.forEach(function(cmd) {
      program.printHelp(cmd)
    })
  }

  if (extensions.length) {
    console.log('\n  ' + color.bold(color.blue('Extensions:')))
    console.log()
    extensions.forEach(function(cmd) {
      program.printHelp(cmd)
    })
  }
  console.log()
});

commander.parse(process.argv)

var args = process.argv.slice(3)
var subcmd = commander.args[0]

if (!subcmd) {
  process.stdout.write(commander.helpInformation());
  commander.emit('--help')
  process.exit()
}

if (subcmd == 'help') {
  var helpcmd = commander.args[1]
  if (!helpcmd) {
    process.stdout.write(commander.helpInformation());
    commander.emit('--help')
    process.exit()
  }
  child_process.exec('spm ' + helpcmd + ' --help', function(err, stdout) {
    if (err) {
      throw err;
    }
    process.stdout.write(stdout)
  })
} else {

  // find executable
  var bin = 'spm-' + subcmd

  var local = path.join(__dirname, bin)
  if (fs.existsSync(local)) {
    bin = local
  } else {
    extensions.forEach(function(cmd) {
      if (subcmd === cmd.name) {
        bin = cmd.executable
      }
    })
  }

  spawn(bin, args, {stdio: 'inherit', customFds: [0, 1, 2]})
}
