#!/usr/bin/env node

var commander = require('commander');
require('colorful').colorful();
var logging = require('../lib/spm').logging;
var builder = require('../lib/commands/build');

commander.usage('[options]');

commander
  .option('-C, --config', 'config file: [binding.spm]')
  .option('-I, --input-directory <dir>', 'input directory: [src]')
  .option('-O, --output-directory <dir>', 'output directory: [dist]')
  .option('-u, --username <username>', 'username for source')
  .option('-p, --password <password>', 'password for source')
  .option('-s, --source <source>', 'source name')
  .option('--interrupt', 'stop the process when warn or error')
  .option('-f, --force', 'force to download a unstable module')
  .option('-v, --verbose', 'show more logs')
  .option('-q, --quiet', 'show less logs');

commander
  .command('help')
  .description('show this help menu')
  .action(function() {
    process.stdout.write(commander.helpInformation());
    commander.emit('--help');
    process.exit();
  });


commander.on('--help', function() {
  console.log();
  console.log('  ' + 'Examples:'.to.bold.blue.color);
  console.log();
  console.log('   Build a standard cmd module is simple');
  console.log();
  console.log('   $ ' + 'spm build'.to.magenta.color);
  console.log();
  console.log('   Build from another source');
  console.log();
  console.log('   $ ' + 'spm build'.to.magenta.color + ' ' + '-I'.to.cyan.color + ' lib ' + '-O'.to.cyan.color + ' dist');
  console.log();
  console.log('   For more information: ' + 'http://spmjs.org/docs/build.html'.to.underline.color);
  console.log();
});



commander.parse(process.argv);

// verbose vs quiet
logging.config(commander);

// run install
builder.run(commander);

function list(val) {
  return val.split(',');
}
