#!/usr/bin/env node

var commander = require('commander');
var spmrc = require('spmrc');
var client = require('spm-client');
require('colorful').colorful();
var spm = require('..');
var iduri = require('../lib/sdk/iduri');
var log = require('../lib/utils/log');
var print = require('../lib/utils/print');

commander.usage('[options] name[@version]');

commander
  .option('--registry <url>', 'registry url of yuan server')
  .option('-q, --quiet', 'show less log')
  .option('--verbose', 'show more log')
  .option('--no-color', 'disable colorful print');


commander.on('--help', function() {
  console.log();
  console.log('  ' + 'Examples:'.to.bold.blue);
  console.log();
  console.log('   $', 'spm info'.to.magenta.color, 'jquery');
  console.log('   $', 'spm info'.to.magenta.color, 'arale-class');
  console.log('   $', 'spm info'.to.magenta.color, 'arale-class@stable');
  console.log('   $', 'spm info'.to.magenta.color, 'arale-class@1.0.0');
  console.log();
});

commander.parse(process.argv);

spm.log.config(commander);

if (!commander.args[0]) {
  process.stdout.write(commander.helpInformation());
  commander.emit('--help');
  process.exit();
}

var registry = commander.registry || spmrc.get('registry') || 'http://spmjs.io';
client.config({
  registry: registry,
  auth: spmrc.get('auth')
});
// run install
console.log();

var pkg = iduri.resolve(commander.args[0]);
if (!pkg) {
  log.error('error', 'invalid module name');
  process.exit(2);
}

client.info(pkg, function(err, res) {
  if (err) {
    return log.error('exit', err.message);
  }
  print(res.body, commander);
});

