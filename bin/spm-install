#!/usr/bin/env node

var commander = require('commander');
require('colorful').colorful();
var path = require('path');
var spm = require('..');
var spmrc = require('spmrc');

commander.usage('[options] name[@version]');

commander
  .option('-r, --registry <url>', 'registry url of yuan server')
  .option('-I, --input-directory <dir>', 'input directory, default: current working directory')
  .option('-d, --destination <dir>', 'output directory, default: sea-modules')
  .option('-f, --force', 'force to download a unstable module')
  .option('-q, --quiet', 'show less logs')
  .option('-S, --save', 'save alias to package.json')
  .option('-SD, --save-dev', 'save devAlias to package.json')
  .option('--parallel [number]', 'parallel installation')
  .option('--verbose', 'show more logs')
  .option('--no-color', 'disable colorful print');


commander.on('--help', function() {
  console.log();
  console.log('  ' + 'Examples:'.to.bold.blue);
  console.log();
  console.log('   $ ' + 'spm install'.to.magenta.color + ' jquery');
  console.log('   $ ' + 'spm install'.to.magenta.color + ' jquery arale-class');
  console.log('   $ ' + 'spm install'.to.magenta.color + ' jquery' +
              '@1.8.2'.to.cyan.color);
  console.log('   $ ' + 'spm install'.to.magenta.color + ' underscore --save');
  console.log();
});

commander.parse(process.argv);

// verbose vs quiet
spm.log.config(commander);

if (commander.global) {
  commander.destination = path.join(spmrc.get('user.home'), '.spm', 'sea-modules');
}

// run install
console.log();
spm.install({
  registry: commander.registry,
  base: commander.base,
  destination: commander.destination,
  force: commander.force,
  parallel: commander.parallel,
  save: commander.save,
  saveDev: commander.saveDev,
  query: commander.args
});
